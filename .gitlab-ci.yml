stages:
  - run

variables:
  ANSIBLE_CONFIG: ansible.cfg
  DEFAULT_INVENTORY_PATH: hosts.yml
  # ANSIBLE_PRIVATE_KEY_FILE -- type: file
  # INVENTORY_PATH -- type: file
  IS_INSTALL:
    value: "yes"
    description: "setup server. 'yes' or 'no'"
  IS_DEPLOY:
    value: "yes"
    description: "Deploy services. 'yes' or 'no'"

.ssh:
  image: python:3.10
  before_script:
    - python -m pip install --user ansible
    - eval `ssh-agent -s` # start ssh-agent
    - chmod 600 $ANSIBLE_PRIVATE_KEY_FILE
    - cat $INVENTORY_PATH > $DEFAULT_INVENTORY_PATH
  script:
    - |
      if [ "$IS_INSTALL" = 'yes' ]; then
        export TAGS="$TAGS $INSTALL_TAGS"
      elif [ "$IS_DEPLOY" = 'yes' ]; then
        export TAGS="$TAGS $DEPLOY_TAGS"
      fi
    - |
      echo "ansible-playbook main.yml $TAGS"
      ansible-playbook main.yml $TAGS
  resource_group: ansible
  variables:
    INSTALL_TAGS: --tags users --tags docker --tags monitor
    DEPLOY_TAGS: --tags docker_compose_service --tags service

.master-rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - if: $CI_PIPELINE_SOURCE == "push"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "trigger"
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_PIPELINE_SOURCE == "web"

# Pipeline
run:
  stage: run
  extends:
    - .ssh
    - .master-rules
  variables:
    MY_SERVER_REPO: cjtim/my-server
    GIT_REPO: "https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${MY_SERVER_REPO}.git"
    # TAGS: --tags users --tags docker --tags monitor
    # TAGS: --tags docker_compose_service --tags service

# deploy:
#   stage: deploy
#   extends:
#     - .ssh
#   rules:
#     - if: $IS_DEPLOY == "no"
#       when: never
#     - *master-rules
#   variables:
#     MY_SERVER_REPO: cjtim/my-server
#     GIT_REPO: "https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${MY_SERVER_REPO}.git"
#     TAGS: --tags docker_compose_service --tags service
