stages:
  - install
  - deploy

variables:
  ANSIBLE_CONFIG: ansible.cfg
  DEFAULT_INVENTORY_PATH: hosts.yml
  # ANSIBLE_PRIVATE_KEY_FILE -- type: file
  # INVENTORY_PATH -- type: file
  IS_INSTALL:
    value: "yes"
    description: "setup server. 'yes' or 'no'"
  IS_DEPLOY:
    value: "yes"
    description: "Deploy services. 'yes' or 'no'"

.ssh:
  image: gableroux/ansible:4.5.0
  before_script:
    - eval `ssh-agent -s` # start ssh-agent
    - cat $INVENTORY_PATH > $DEFAULT_INVENTORY_PATH
    # - |
    #   ansible-galaxy collection install \
    #   community.docker \
    #   community.general
    # - chmod +x ./deploy.sh
    # - ./deploy.sh
  script:
    - ansible-playbook main.yml $TAGS
  resource_group: ansible

.master-rules: &master-rules
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
  - if: $CI_PIPELINE_SOURCE == "push"
    when: manual
  - if: $CI_PIPELINE_SOURCE == "trigger"
  - if: $CI_PIPELINE_SOURCE == "pipeline"
  - if: $CI_PIPELINE_SOURCE == "web"

# Pipeline
install:
  stage: install
  extends:
    - .ssh
  rules:
    - if: $IS_INSTALL == "no"
      when: never
    - *master-rules
  variables:
    TAGS: --tags users --tags docker

deploy:
  stage: deploy
  extends:
    - .ssh
  rules:
    - if: $IS_DEPLOY == "no"
      when: never
    - *master-rules
  variables:
    MY_SERVER_REPO: cjtim/my-server
    GIT_REPO: "https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${MY_SERVER_REPO}.git"
    TAGS: --tags "docker_compose_service"
